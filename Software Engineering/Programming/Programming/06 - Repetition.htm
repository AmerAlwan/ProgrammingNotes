<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head lang="en">
<link href="TemplateFiles/stylesheet.css" type="text/css" rel="stylesheet" />
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
<title>Sample Content Topic</title>
</head>
<body>
<div id="container">
<div id="decorative">&nbsp;&nbsp;</div>
<div id="header">
<div class="courseTitle"><span style="color: #000000;">TEJ 3MI Grade&nbsp;11 Computer Engineering Technology</span></div>
<h1 class="header"><span style="color: #000000;">software engineering and game design</span></h1>
<div id="d_content_r_c1">
<div id="d_content_r_c2">
<div id="d_content_r">
<div id="d_content_r_p"><form method="post" action="https://wcdsb.elearningontario.ca/d2l/lms/quizzing/user/attempt/quiz_attempt_page.d2l?ou=8475732&amp;isprv=1&amp;drc=0&amp;impcf=&amp;pg=1&amp;qi=2550465&amp;ai=3734140&amp;dnb=0&amp;cfql=0&amp;d2l_body_type=1" id="d2l_form" enctype="multipart/form-data">
<h2><span style="color: #000000; font-size: 24pt;">REPETITION</span></h2>
<p><span style="color: #000000; font-size: 14pt;">Up to this point we have had our programs run just one time; or if we want something to happen over and over again we just place our code in the void Update() section. However, there are times when we want some to happen repeatedly, but only when we call on it to happen repeatedly. The Update() section of the code will simple repeat the entire time the program is running.</span></p>
<p><span style="color: #000000; font-size: 14pt;">In Unity there are several different types of loops, however, we are just going to look at two types.</span></p>
<h2><span style="color: #000000; font-size: 24pt;">ForLoop</span></h2>
<p><span style="color: #000000; font-size: 14pt;">When we know that we want something to repeat a very specific number of times, we use a <strong>for</strong> loop. For example, maybe we want a certain number of enemies to appear on a screen, or we want a timer to always be set to a certain number. A for loop allows us to count exactly the number of times something will happen.</span></p>
<p><span style="color: #000000; font-size: 14pt;"><img src="pics3/rep1.PNG" alt="" title="" width="507" height="217" /></span></p>
<p><span style="color: #000000; font-size: 14pt;">In this example we set out the number of enemies we want to create. We then use a for loop that starts counting from zero as long as the count is less than the number of enemies. We use the command i++ to add one each time we run the loop. It should be noted that you can start your count at any number; for example you could start at three.</span></p>
<h2><span style="color: #000000; font-size: 24pt;">WhileLoop</span></h2>
<p><span style="color: #000000; font-size: 14pt;">Sometimes we want things to happen, but we don't really know how long they should happen for. For example, maybe you want an enemy to appear as long as a player is in a certain area; you have no way to know how long the user will remain in that area so you have no way to know how many times to create a new enemy. In order to get around this we set our statement to meet a condition and then control that condition from inside the loop. We will recreate the above example using a while loop.</span></p>
<p><span style="color: #000000; font-size: 14pt;"><img src="pics3/rep2.PNG" alt="" title="" width="639" height="264" /></span></p>
<p><span style="color: #000000; font-size: 14pt;">This is a very simple example but hopefully you can see how it works. However, often time a while loop depends on a different type of logic. In this example we will use an if statement to control the logic of how our loop works.</span></p>
<p><span style="color: #000000; font-size: 12pt;"><img src="pics3/rep3.PNG" alt="" title="" width="678" height="448" /></span></p>
<p><span style="color: #000000; font-size: 12pt;"></span></p>
<h2><span style="color: #000000; font-size: 24pt;">EXERCISES</span></h2>
<p><span style="font-size: 14pt;">1) Create a program that uses three variables to hold three names. Then use a loop (and if statements) to print out a message to each name.</span></p>
<p><span style="font-size: 14pt;">2) Create a program that uses three variables to calculate the equation var1 * var2 - (var3 * 2). Print the answer to the equation as long as the answer is less than 150.</span></p>
<p><span style="font-size: 14pt;">3) Create a program that holds three names and three ages. Print out the names in the order of age (oldest first) and print each name the number of times equal to their age.</span></p>
<p><span style="font-size: 14pt;">4) Create a program that holds 5 names. You are to sort the names alphabetically by looking at the first character in the string. To find the character in the string you use the code:</span></p>
<p style="padding-left: 30px;"><em><span style="font-size: 14pt;">string name1 = "Hurray";</span></em></p>
<p style="padding-left: 30px;"><em><span style="font-size: 14pt;">string firstLetter = name1.Substring(0,1);</span></em></p>
<p><span style="font-size: 14pt;">You then need convert the string into ASCII (or unicode) which is a numerical value for each letter. To do this you use the code:</span></p>
<p style="padding-left: 30px;"><em><span style="font-size: 14pt;">int unicode = firstLetter;</span></em></p>
<p><span style="font-size: 14pt;">Now you can sort the order based on the numerical values and then print out the names in alphabetical order. You will need to use both repetition and selection for this program to work properly.</span></p>
<p><span style="font-size: 14pt;">5) Create a program based on the last question. The only difference is that this time you should have 6 names; two names start with the same first letter, two names start with the&nbsp;</span></p>
<p></p>
</form></div>
</div>
</div>
</div>
<p><br /><span lang="EN-US" style="font-size: 14pt;"></span></p>
</div>
</div>
</body>
</html>